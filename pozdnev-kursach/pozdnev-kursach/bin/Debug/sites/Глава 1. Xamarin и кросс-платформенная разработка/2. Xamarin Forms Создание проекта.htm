<p>Для создания кроссплатформенных приложений для Xamarin Forms в Visual Studio 2019 предназначен шаблон проекта, 
который называется <span class="b">Mobile App (Xamarin.Forms)</span>. Для быстрого поиска шаблона проекта можно отфильтровать шаблоны по ключу "xamarin"</p>
<img src="./pics/1.19.png" alt="Типы проектов для Xamarin Forms в Visual Studio 2019" />
<p>То есть для создания проекта приложения нам по сути надо выбрать первый тип проекта.</p>
<p>Итак, создадим первый проект. Для него выберем тип <span class="b">Mobile App (Xamarin.Forms)</span> и назовем его, к примеру, <span class="b">HelloApp</span>:</p>
<img src="./pics/1.28.png" alt="Создание проекта Xamarin Forms в Visual Studio 2019" />
<p>После этого будет предложено выбрать шаблон проекта и установить ряд настроек:</p>
<img src="./pics/1.20.png" alt="Шаблоны проектов для Xamarin Forms в Visual Studio 2019" />
<p>Здесь нам доступно три шаблона:</p>
<ul>
<li><p><span class="b">Floyout</span>: проект с боковым меню</p></li>
<li><p><span class="b">Tabbed</span>: проект приложения, которое использует вкладки для навигации между страницами</p></li>
<li><p><span class="b">Blank</span>: пустой шаблон, создающий проект с минимальной функциональностью</p></li>
</ul>
<p>Кроме того, при создании проекта в опции <span class="b">Platform</span> мы можем отметить, под какие ОС будет создаваться проект. В данном случае мы можем 
выбрать все платформы: Android, iOS, Windows (UWP).</p>
<p>Windows (UWP) доступна только под Windows, если для Visual Studio установлен инстументарий для разработки под UWP.</p>
<p>В данном случае в качестве шаблона проекта выберем <span class="b">Blank</span>.</p>
<p>И Visual Studio сгенерирует новое решение. Если мы выбрали выше все три платформы, то созданное решение будет содержать четыре проекта:</p>
<img src="./pics/1.21.png" alt="Первый проект Xamarin Forms" />
<ul>
<li><p><span class="b">HelloApp</span>: главный проект библиотеки, которая и будет содержать всю основную логику приложения</p></li>
<li><p><span class="b">HelloApp.Android</span>: проект для Android</p></li>
<li><p><span class="b">HelloApp.iOS</span>: проект для iOS</p></li>
<li><p><span class="b">HelloApp.UWP</span>: проект для Windows 10</p></li>
</ul>
<p>Однако в зависимости от операционной системы набор проектов может быть иным. Например, при работа в Visual Studio для Mac в MacOS будут достуны только 
три проекта: общий проект библиотеки, проект для iOS и проект для Android.</p>
<p>Главным будет самый верхний проект (в данном случае <span class="b">HelloApp</span>). Он будет содержать весь код и определение интерфейса, которую затем 
будут использовать все остальные проекты.</p>
<p>Если мы обратимся к главному проекту, то в нем уже будет четыре основных файла:</p>
<ul>
<li><p><span class="b">App.xaml</span>: файл, который определяет ресурсы, общие для всего приложения</p></li>
<li><p><span class="b">App.xaml.cs</span>: файл с кодом C#, с которого начинается выполнение приложения</p></li>
<li><p><span class="b">MainPage.xaml</span>: файл с визуальным интерфейсом для единственной страницы MainPage в виде xaml</p></li>
<li><p><span class="b">MainPage.xaml.cs</span>: файл, который содержит логику MainPage на языке C#</p></li>
<li><p><span class="b">AssemblyInfo.cs</span>: файл с кодом на языке C#, который используется для установки настроек приложения</p></li>
</ul>
<p>В принципе при организации главного проекта используется та же схема, что и при создании проектов WPF/UWP: есть файлы, которые определяют логику всего приложения - 
App.xaml и App.xaml.cs и есть файлы с интерфейсом и логикой единственной страницы приложения - MainPage.</p>
