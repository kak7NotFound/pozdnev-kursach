	<p>В Xamarin.Forms визуальный интерфейс состоит из страниц. Страница представляет собой объект класса <span class="b">Page</span>, 
она занимает все пространство экрана. То есть то, что мы видим на экране мобильного устройства - это страница. Приложение может иметь одну или несколько страниц.</p>
<p>Страница в качестве содержимого принимает один из контейнеров компоновки, в который в свою очередь помещаются стандартные визуальные элементы типа кнопок и 
текстовых полей, а также другие элементы компоновки.</p>
<p>Возьмем созданный в прошлой теме проект HelloApp (или создадим новый). По умолчанию весь интерфейс создается в классе App, который располагается в файле <span class="b">App.xaml.cs</span> и который представляет текущее приложение:</p>
<img src="pics/2.43.png" alt="App.xaml.cs и создание интерфейса в Xamarin Forms" />
<p>Его код по умолчанию:</p>
<pre class="brush:c#;">
using System;
using Xamarin.Forms;
using Xamarin.Forms.Xaml;

namespace HelloApp
{
    public partial class App : Application
    {
        public App()
        {
            InitializeComponent();
            MainPage = new MainPage();
        }

        protected override void OnStart()
        {
            // Handle when your app starts
        }

        protected override void OnSleep()
        {
            // Handle when your app sleeps
        }

        protected override void OnResume()
        {
            // Handle when your app resumes
        }
    }
}
</pre>
<p>Работа класса App начинается с конструктора, где сначала вызывается метод <span class="b">InitializeComponent()</span>, который выполняет инициализацию объекта, 
а потом устанавливается свойство <span class="b">MainPage</span>. Через это свойство класс App устанавливает главную страницу приложения. В данном случае она 
определяется классом HelloApp.MainPage, то есть тем классом, который определен в файлах MainPage.xaml и MainPage.xaml.cs.</p>
<p>Но данный путь не единственный. Xamarin.Forms позволяет создавать визуальный интерфейс как с помощью кода C#, так и декларативным путем с 
помощью языка xaml, аналогично html, либо комбинируя эти подходы.</p>
<h3>Создание интерфейса из кода C#</h3>
<p>Добавим в проект HelloApp обычный класс на языке C#, который назовем <span class="b">StartPage</span>.</p>
<img src="./pics/2.79.png" alt="Добавление станицы в проект Forms Xamarin" />
<p>И определим в этом классе следующее содержимое:</p>
<pre class="brush:c#;">
using Xamarin.Forms;

namespace HelloApp
{
    class StartPage : ContentPage
    {
        public StartPage()
        {
            Label header = new Label() { Text = "Привет из Xamarin Forms" };
            this.Content = header;
        }
    }
}
</pre>
<p>Данный класс представляет страницу, поэтому наследуется от класса <code>ContentPage</code>. В конструкторе создается метка с текстом, которая задается в качестве содержимого 
страницы (<code>this.Content = header</code>).</p>
<p>Чтобы обозначить StartPage в качестве стартовой страницы, изменим класс App:</p>
<pre class="brush:c#;">
using Xamarin.Forms;

namespace HelloApp
{
    public partial class App : Application
    {
        public App()
        {
            InitializeComponent();

            MainPage = new StartPage();
        }
        protected override void OnStart()
        {
            // Handle when your app starts
        }

        protected override void OnSleep()
        {
            // Handle when your app sleeps
        }

        protected override void OnResume()
        {
            // Handle when your app resumes
        }
    }
}
</pre>
<p>Теперь свойство MainPage указывает на только что созданную страницу StartPage.</p>
<img src="./pics/2.80.png" alt="Создание новой страницы в Xamarin" />
<p>Также стоит отметить, что в Visual Studio есть готовый шаблон для добавления новых классов страниц с простейшим кодом. Так, чтобы добавить новую страницу, 
надо при добавлении нового элемента выбрать шаблон <span class="b">Content Page (C#)</span>:</p>
<img src="./pics/2.81.png" alt="Forms Blank Content Page в Xamarin" />
<p>Данный класс добавляется в главный проект решения (в данном случае это HelloApp).</p>
<p>Добавленный класс страницы будет иметь следующий код:</p>
<pre class="brush:c#;">
using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection.Emit;
using System.Text;

using Xamarin.Forms;

namespace HelloApp
{
    public class Page1 : ContentPage
    {
        public Page1()
        {
            Content = new StackLayout
            {
                Children = {
                    new Label { Text = "Hello Page" }
                }
            };
        }
    }
}
</pre>
<p>Этот класс также будет наследоваться от базового класса <span class="b">ContentPage</span> и будет иметь практически ту же самую организацию, что 
и выше созданный класс MainPage.</p>
<p>И также в классе приложения мы можем установить эту страницу в качестве стартовой:</p>
<pre class="brush:c#;">
using Xamarin.Forms;

namespace HelloApp
{
    public partial class App : Application
    {
        public App()
        {
			InitializeComponent();
            MainPage = new Page1();
        }
        //...........
    }
}
</pre>
	
	<div style="margin-top:25px;">
